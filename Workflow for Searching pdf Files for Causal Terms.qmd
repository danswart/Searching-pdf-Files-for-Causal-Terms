---
title: "Workflow for Searching pdf Files for Causal Terms"
subtitle: ""
description: ""
author: 
  - name: "Dan Swart, CPA (ret)"
    affiliations:
      - "SCUC-ISD Board of Trustees"
      - "Seat 6"
date: today
date-format: long
# bibliography: manual-refs.bib
format:
  html:
    resources:
      - reference-backlinks.js
    include-after-body:    
      - text: |
          # <script type="text/javascript" src="reference-backlinks.js"></script>
    default: true         
    code-copy: true
    code-link: true        # This adds individual buttons
    code-fold: true        # Hide code by default, show on click
    code-summary: "Show the code"
    code-overflow: wrap
    code-block-bg: "#FAEBD7"
    code-block-border-left: "#31BAE9"
    embed-resources: true
    include-in-header: header.html
    css:
      - swart.css
      - tachyons.min.css
      - r-colors.css
    fontsize: 18pt
    lightbox: true
    page-layout: full
    fig-width: 12
    fig-height: 10
    fig-dpi: 300
    html-math-method: katex
    df-print: paged
    toc: true
    toc-float: true
    citeproc: true
    link-citations: true
    linestretch: 1.0
    
    
    
  typst:
    fig-width: 12
    fig-height: 10
    fig-dpi: 300
    margin:
      x: 1in
      y: 1in
    toc: true
    fontsize: 14pt
    mainfont: "Cabin"
    
  revealjs:
    slide-number: true
    transition: fade
    code-overflow: wrap
    center: true
    smaller: true
    scrollable: true
    chalkboard: true
    multiplex: false
    theme: solarized
    reference-location: margin
    logo: img/red-cross-640-435.png
    footer: "Footer text"
    code-block-height: 650px



  # docx:
  #   highlight-style: github
  #   fig_caption: true



editor: source

quarto:
  render:
    cache-refresh: true


# for .qmd filesd
execute:
  echo: true
  message: false
  warning: false
  eval: true
  fig-width: 12
  fig-height: 10


# for .rmd files
knitr:
  opts_chunk:
    echo: true
    error: false
    warning: false
    message: false
    cache: false

---


```{r}
#| label: setup
#| include: false

# Prevent scientific notation globally
options(scipen = 999)

# load libraries
library(readxl)
library(writexl) 
library(tidyr) 
library(readr) 
library(purrr) 
library(stringr) 
library(forcats) 
library(lubridate) 
library(janitor) 
library(ggtext) 
library(paletteer) 
library(viridis) 
library(RColorBrewer) 
library(wesanderson) 
library(dutchmasters) 
library(gghighlight) 
library(monochromeR) 
library(ggforce) 
library(ggthemes)
library(gt)
library(gtExtras)
library(tidyverse)
library(plotly)
library(ggplot2)
library(tibble)
library(patchwork)
library(ppcor)
library(ggplot2)
library(corrplot)
library(ggcorrplot)
library(car)
library(WRS2)
library(boot)
library(BayesFactor)
library(pwr)
library(qgraph)
library(scales)
library(here)
library(ggdag)      # For plotting DAGs
library(dagitty)    # For working with DAG logic
library(DiagrammeR) # For complete control of the layout
library(knitr)      # For controlling rendering
library(kableExtra) # For tables summarizing results
library(DT)         # For rendering content that kableExtra cannot (symbols)
library(lavaan)     # For latent variable analysis
library(ggpubr)
library(rethinking)
library(broom)


# Force dplyr's select to take precedence
select <- dplyr::select
filter <- dplyr::filter

# Set global theme for consistent plots
theme_set(theme_minimal(base_size = 20) + 
          theme(
    plot.title = element_text(face = "bold", size = 26),    # adjust title size
    plot.subtitle = element_text(face = "bold", size = 24), # adjust subtitle size
    axis.title.x = element_text(face = "bold", size = 22),
    axis.title.y = element_text(face = "bold", size = 22),
    axis.text.x = element_text(face = "bold", size = 22, angle = 45, hjust = 1),
    legend.position = "bottom",
    strip.text = element_text(face = "bold"),
    panel.spacing.x = unit(1.5, "cm"),  # Horizontal spacing only
    panel.spacing.y = unit(1.5, "cm"),   # Vertical spacing only
    plot.margin = margin(20, 20, 20, 20, "pt")
    )
)


# Set seed for reproducibility
set.seed(123)

```


# WORKFLOW

1.  Use the "create-new-glossary.R" file to create new glossary vector object and store it as an .RData file. 

2.  Create a new R script for adding/removing search terms from the new glossary by cloning the "add-remove terms in causal_terms vector.R" file.  Create new script using the filenames and object names consistent with the new glossary name.  Store the updated vector object as an .RData file in the /data folder

3.  Create a new R script for adding/removing search terms in the corresponding JSON file by cloning an existing add/remove R script file.  I use the JSON files in the PYTHON scripts for highlighting and underlining the glossary search terms in a pdf file.  Accordingly, this JSON file of search terms must be kept up to date.

4.  Before annotating a pdf file, use the "Add-Remove search terms" R script file if you have any new search terms to add to, or remove from, the glossary.


5.  Clone a new BEST Search Terms Percentages in PDF for any new glossaries.

6.  Run the BEST Search Terms Percentages in PDF.R script, BUT DON'T RUN THE CODE TO INVOKE THE PYTHON ENVIRONMENT FOUND AT THE BOTTOM OF THE SCRIPT.

7.  When ready to annotate the PDF file(s), RUN THE CODE TO INVOKE THE PYTHON ENVIRONMENT FOUND AT THE BOTTOM OF THE SCRIPT.

8.  Run the appropriate PYTHON scripts to annotate the PDF(s).


9.  Use the PYTHON scripts to annotate a new pdf file (don't overwrite your original pdf file) with highlighting and underlining the various search terms.  You can use up to three glossaries when highlighting pdf files.  Use the PYTHON code for highlighting, underlining, and squiggly lines to identify the terms from each of the three glossaries.  The JSON files are used by the PYTHON files so they must be kept up to date.








